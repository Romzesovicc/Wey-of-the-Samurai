{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileStatus/ProfileStatusWithHooks.js","Components/Profile/ProfileData/ProfileData.js","Components/Profile/ProfileData/ProfiledataForm.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","lockSpan","onClick","autoFocus","value","onChange","e","currentTarget","onBlur","updateStatus","ProfileData","profile","isOwner","goToEditMode","show","showMoreData","center","noShow","edit","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","contactTitle","contactValue","Contacts","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","onSubmit","formSummeryError","createField","Input","type","Textarea","ProfileInfo","saveProfile","savePhoto","showInput","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","alt","onMouseOver","target","files","length","hideInput","initialValues","formData","then","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","post","likeCount","id","postInline","postsBlock","AddNewPostRedux","values","addPost","NewPostText","maxLength10","maxLengthCreator","Field","name","component","validate","required","placeholder","buttonCenter","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","contentProfile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3bd0e685.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentProfile\":\"Profile_contentProfile__32O4H\",\"lockSpan\":\"Profile_lockSpan__1aywh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1GqLp\",\"showInput\":\"ProfileInfo_showInput__3Oqss\",\"hideInput\":\"ProfileInfo_hideInput__3YJaK\",\"contacts\":\"ProfileInfo_contacts__139Qj\",\"mainPhoto\":\"ProfileInfo_mainPhoto__342YT\",\"noShow\":\"ProfileInfo_noShow__2yJiA\",\"show\":\"ProfileInfo_show__d7lUd\",\"edit\":\"ProfileInfo_edit__3qvNN\",\"center\":\"ProfileInfo_center__3kCZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3-CkJ\",\"posts\":\"MyPosts_posts__3sHr0\",\"buttonCenter\":\"MyPosts_buttonCenter__XGPpb\",\"postInline\":\"MyPosts_postInline__2YCtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__28yhR\"};","import React, {useState, useEffect} from 'react';\r\nimport s from '../Profile.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n\r\n        props.updateStatus(status);\r\n    };\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div className={s.lockSpan}>\r\n            {!editMode &&\r\n            <div>\r\n               <b>Status:</b> <span onClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} value={status}\r\n                       onChange={onStatusChange}\r\n                       onBlur={deactivateEditMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React,{useState,useEffect} from 'react';\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\n\r\nexport const ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    let [show, showMoreData] = useState(true);\r\n    const showData = () => {\r\n            showMoreData(false)\r\n    };\r\n    const hideData = () => {\r\n        showMoreData(true)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.center}><button onClick={showData} className={show ? s.show: s.noShow} >Show more</button></div>\r\n            <div className={s.center} ><button onClick={hideData} className={show ? s.noShow: s.show} >Hide</button></div>\r\n            { isOwner && <div className={s.edit} ><button onClick={goToEditMode} className={show ? s.noShow: s.show }>Edit</button></div>}\r\n\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional scills </b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div className={show ? s.noShow : s.show} >\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return  <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts} ><b>{contactTitle}</b>: {contactValue}</div>\r\n}","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport s from \"../../Common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit,profile,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <div className={s.edit} ><button >save</button></div>\r\n            {error && <div className={s.formSummeryError}>{error}</div>}\r\n            <div>\r\n                <b>Full name</b>: {createField('Full name', 'fullName', [], Input) }\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>:\r\n                {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'}) }\r\n            </div>\r\n            <div>\r\n                <b>my professional scills </b>:\r\n                {createField('my professional scills', 'lookingForAJobDescription', [], Textarea) }\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField('about me', 'aboutMe', [], Textarea) }\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return  <div key={key}>\r\n                    <b>{key}: {createField(key, 'contacts.' + key, [], Input)} </b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form:'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport {ProfileData} from \"../ProfileData/ProfileData\";\r\nimport ProfileDataFormReduxForm from \"../ProfileData/ProfiledataForm\";\r\nimport userPhoto from '../../../assets/images/img_avatar.png';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, saveProfile,isOwner,savePhoto}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [show, showInput] = useState(true);\r\n\r\n    const showData = () => {\r\n        showInput(false)\r\n    };\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}  alt='ProfilePhoto' onMouseOver={showData} />\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected} className={!show ? s.showInput : s.hideInput } />}\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile}\r\n                                   isOwner={isOwner}\r\n                                   goToEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}\r\n\r\n                    />}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item} >\r\n            <div>\r\n            <img src='https://www.w3schools.com/w3css/img_avatar3.png' alt='ItemPhoto'/>\r\n            {props.message}\r\n            </div>\r\n            <div>\r\n                <span>{`Like ${props.likesCount}`}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts =React.memo((props) => {\r\n\r\n    let postsElements = [...props.posts].reverse().map((post) => <Post message={post.message}\r\n                                                        likesCount={post.likeCount}\r\n                                                        id={post.id}\r\n                                                        key={post.id}\r\n    />);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.NewPostText)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.postInline} >\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        <div className={s.postsBlock}>\r\n\r\n            <h3>My posts</h3>\r\n            <AddNewPostRedux onSubmit={onAddPost}/>\r\n\r\n        </div>\r\n</div>\r\n    )\r\n});\r\n\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='NewPostText' component={Textarea}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder='Enter post message'/>\r\n\r\n            </div>\r\n            <div className={s.buttonCenter} >\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nconst AddNewPostRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/Profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (NewPostText) => {\r\n            dispatch(addPostActionCreator(NewPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.contentProfile}>\r\n            <ProfileInfo status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         profile={props.profile}\r\n                         saveProfile={props.saveProfile}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/Profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     isOwner={!this.props.match.params.userId}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}